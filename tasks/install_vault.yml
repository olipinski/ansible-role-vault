- name: Ensure unzip package is installed
  package:
    name: '{{ vault_package_list | list }}'
    state: 'present'
    update_cache: true
  register: pkg_install_result
  until: pkg_install_result is success

- name: Download Vault binary
  get_url:
    url: "{{ vault_zip_url }}"
    dest: "/tmp/{{ vault_pkg }}"
    owner: "root"
    group: "root"
    mode: 0755
    checksum: "sha256:{{ (lookup('url', vault_checksum_file_url, wantlist=true) | select('match', '.*' + vault_pkg + '$') | first).split()[0] }}"
    validate_certs: false
  register: _download_server
  until: _download_server is succeeded
  retries: 5
  delay: 2

- name: Unarchive Vault
  unarchive:
    src: "/tmp/{{ vault_pkg }}"
    dest: "/tmp/"
    creates: "/tmp/vault"
    remote_src: true
  become: true
  run_once: true

- name: Install Vault
  become: true
  copy:
    src: "/tmp/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0755"
    remote_src: true
  notify: Restart vault

- name: Cleaninig files
  become: true
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
   - "/tmp/vault"
   - "/tmp/{{ vault_pkg }}"
